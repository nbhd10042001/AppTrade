@using App.Areas.Product.Models
@using App.Models.Product;

@model SelectFilters

@{
    CategoryProductModel categoryChoosed = ViewBag.categoryChoosed as CategoryProductModel;
    ViewData["Title"] = (categoryChoosed != null) ? categoryChoosed.Title : "SHOP";

    List<CategoryProductModel> categories = ViewBag.categories as List<CategoryProductModel>;
    var Products = ViewBag.productsInPage as IQueryable<ProductModel>;
    var MSLCategories = ViewBag.MSLCategories as MultiSelectList;
    var filterSelected = ViewBag.filterSelected as List<int>;
    var seachBar = ViewBag.searchBar as string;
}

@* List Products *@
<h1 class="text-center">@ViewData["Title"]</h1> <hr>

@* Kiem tra danh sach lua chon fiters de save thong tin lua chon *@
@{
    var fs1 = false;
    var fs2 = false;
    var fs3 = false;
    var fs4 = false;
    if (filterSelected != null)
    {
        foreach(var fs in filterSelected)
        {
            if (fs == 101)
                fs1 = true;
            else if (fs == 102)
                fs2 = true;
            else if (fs == 103)
                fs3 = true;
            else if (fs == 104)
                fs4 = true;
        }
    }
}

@if (categoryChoosed != null){
    <p>@categoryChoosed.Content</p>
}

<style>
    .dropdown {
        position: relative;
        display: inline-block;
    }
    .dropdown-content {
        display: none;
        position: absolute;
        background-color: #f9f9f9;
        max-height: 150px;
        box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
        padding: 12px 16px;
        z-index: 1;
    }
    .vertical-scroll{
        overflow-y: scroll;
        min-height: 150px;
        height: 100%;
    }
    .img-result-search{
        width: 20px;
        height: 20px;
    }
    .custom-result-search{
        align-items: center;
        &:hover{
            opacity: 0.8;
            background-color: #e6e6e6;
        }
    }
</style>

@* Filter *@
<div class="w-100 shadow" style="border: 2px groove; border-radius: 7px; ">
    <form method="post" asp-action="ListFilter" asp-area="Product" asp-controller="ViewProduct" class="mx-1 my-1">
        <div class="text-center"><i class="fas fa-filter"></i>Filter Products</div>
        <div class="form-group w-25">
            <label asp-for="selectFilters" class="control-label">Sort by</label>
            <select asp-for="selectFilters" id="MSLFilter" class="w-100">
                <option selected="@fs1" value="101">Last</option>
                <option selected="@fs2" value="102">Old Update</option>
                <option selected="@fs3" value="103">Price High</option>
                <option selected="@fs4" value="104">Price Low</option>
            </select>
        </div>

        <div class="form-group w-25">
            <label asp-for="selectCategories" class="control-label"></label>
            <select asp-for="selectCategories" id="MSLCategories" asp-items="MSLCategories" multiple="multiple" class="w-100"></select>
        </div>
        <br>
        @* <i class="fas fa-search"></i> Search *@
        <div class="form-group d-flex align-items-center">
            <div class=" w-75 dropdown">
                <input id="input-search-bar" asp-for="SearchBar" value="@seachBar" class="form-control" type="search" oninput="CheckValueInput(this)" placeholder="Search" aria-label="Search">
                <div class="dropdown-content w-100" id="result-box"></div>
            </div>

            <input type="submit" value="Search" class="btn btn-outline-success mx-1"/>
            <span onclick="ClickClearButton()" class="btn btn btn-outline-danger">Clear</span>
        </div>
    </form>
    <br>
</div>
<br>

<div id="card-product" class="container-view-product">
    @* <div id="box-product" >
    </div> *@

    @foreach(var product in Products)
    {
        var srcImg = "/contents/noImg.png";
        if (product.Photos.Any())
            srcImg = product.Photos.FirstOrDefault().FileName;

        <div class="item-view-product card">
            <div style="height: 25%; align-items: center; justify-content: center; display: flex;">
                <img src="@srcImg" style="height: auto; width: auto; max-width: 200px; max-height: 100px;" alt="...">
            </div>
            <div class="card-body">
                <h5 class="card-title text-truncation">@product.Title.Replace("-", " ")</h5>
                <p class="card-text text-truncation">@product.Description</p>
                <p>
                    <i>
                        <small>
                            @string.Join(", " , product.ProductCategoryProducts.Select(pc => pc.CategoryProduct.Title))
                        </small>
                    </i>
                </p>
                <a class="card-link site-a-blue" asp-area="Product" asp-controller="ViewProduct" asp-action="Detail" asp-route-productslug="@product.Slug">
                    <u>Detail</u>
                </a>
            </div>

            <div class="text-center card-footer">
                <p class="">Price: <strong>@product.Price $</strong></p><hr>
                <div id="box-cart">
                    <span onclick="AddToCart(@product.ProductId)" class="btn btn-success">
                        Add to cart
                    </span>
                </div>
            </div>
        </div>
    }
</div>

<div style="display: flex; justify-content: center; margin-top: 20px;">
    <partial name="_PagingXTL" model="@ViewBag.pagingmodel" />
</div>

@section Scripts
{
    <link rel="stylesheet" href="~/lib/multiple-select/multiple-select.min.css" />
    <script src="~/lib/multiple-select/multiple-select.min.js"></script>

    <script>
        var timer;
        var inputSearch = document.getElementById("input-search-bar");
        var resultBox = document.getElementById("result-box");

        //handle input search and show box result if inputSearch value not empty or hide box result if value empty
        function CheckValueInput(e) {
            if (e.value == ""){
                resultBox.style.display = "none";
            }
            else{
                resultBox.style.display = "block";
                clearTimeout(timer);
                timer = setTimeout(() => { ShowResultValueInputSearch() }, 300);
            }
        }

        function ShowResultValueInputSearch(){
            var formData = new FormData();
            var valueInput = document.getElementById("input-search-bar").value;
            var urlAction = "@Url.Action("GetListProductsFromSearch", "ViewProduct")";
            formData.append("inputValue", valueInput);
            $.ajax({
                data: formData,
                cache: false,
                url: urlAction,
                type: "POST",
                async: true,
                contentType: false,
                processData: false,
                success: function(data)
                {
                    if(data.success === 1)
                    {
                        console.log("Ok");
                        var resultBox = $("#result-box");
                        resultBox.empty();

                        if(data.list.length > 5){
                            resultBox.addClass("vertical-scroll");
                        }
                        else{
                            resultBox.removeClass("vertical-scroll");
                        }

                        for (let i = 0; i < data.list.length; i++){
                            var e = $(` <div class="custom-result-search">
                                            <a href="/viewproduct/Detail/product/${data.list[i].slug}.html" style="text-decoration: none;">${data.list[i].name}</a>
                                            <img src="${data.list[i].img}" class="img-result-search" alt="...">
                                        </div> `
                                    );
                            resultBox.append(e);
                        }
                    }
                }
            });
        }

        // event handle click outside inputSearch
        document.addEventListener("click", function (event){
            inputRect = inputSearch.getBoundingClientRect();
            if(inputRect.y < event.clientY && event.clientY < (inputRect.y+inputRect.height)
                && inputRect.x < event.clientX && event.clientX < (inputRect.x+inputRect.width))
            {
                if(window.getComputedStyle(resultBox, null).display === "none" && inputSearch.value != ""){
                    resultBox.style.display = "block";
                    ShowResultValueInputSearch();
                }
            }
            else{
                if(window.getComputedStyle(resultBox, null).display === "block"){
                    resultBox.style.display = "none";
                }
            }
        });
    </script>

    <script>
        $(function(){
            $("#MSLFilter").multipleSelect({
                single: true,
            });

            $("#MSLCategories").multipleSelect({
                selectAll: true,
                keepOpen: false,
                isOpen: false,
            });
        })

        function ClickClearButton()
        {
            var formData = new FormData();
            var urlAction = "@Url.Action("ClearButton", "ViewProduct")";
            $.ajax({
                data: formData,
                cache: false,
                url: urlAction,
                type: "GET",
                contentType: false,
                processData: false,
                success: function(data)
                {
                    if(data.success === 1)
                    {
                        window.location.replace(data.url);
                    }
                }
            });
        }
    </script>

    <script>
        var timer;
        function AddToCart (id)
        {
            var formData = new FormData();
            formData.append("id", id);
            var urlAction = "@Url.Action("AddToCart", "Cart")";
            $.ajax({
                data: formData,
                cache: false,
                url: urlAction,
                type: "POST",
                contentType: false,
                processData: false,
                success: function(data)
                {
                    if(data.success === 1)
                    {
                        @* clearInterval(timer); *@
                        clearTimeout(timer);
                        ShowNotifCart(data.productname);
                        UpdateQuantityCart();
                    }
                    else if (data.success === 0)
                    {
                        window.location.replace(data.url);
                        @* alert("Login!"); *@
                    }
                }
            });
        };

        function ShowNotifCart(productname)
        {
            $("#content-notif-cart").empty().append("Thêm " + "<strong>"+productname+"</strong>" + " vào giỏ hàng thành công!");
            $("#liveToast").removeClass("hide");
            $("#liveToast").addClass("show");
            timer = setTimeout(() => {
                $("#liveToast").removeClass("show");
                $("#liveToast").addClass("hide");
            }, 3000);
        }

        function UpdateQuantityCart ()
        {
            var box = $("#cart-partial");
            box.empty();
            var formData = new FormData();
            var urlAction = "@Url.Action("LoadCartCount", "Cart")";

            $.ajax({
                data: formData,
                cache: false,
                url: urlAction,
                type: "POST",
                contentType: false,
                processData: false,
                success: function(data)
                {
                    console.log(data.count);
                    // load cart
                    var e = $(
                        '<a class="link-danger nav-link" style="text-decoration: none;"'+
                            'href=" '+ data.url +' " >'+
                            '<i class="fas fa-shopping-cart"> Cart('+ data.count +') </i>'+
                        '</a>'
                    );
                    box.append(e);
                }
            });
        }
    </script>

    <script>
        window.addEventListener("resize", ResizeViewOrder);
        function ResizeViewOrder(){
            var widthDoc = $(document).width();
            var collection = document.getElementsByClassName("item-view-product");
            if(widthDoc < 600){
                for(let i=0;i<collection.length;i++){
                    collection[i].style.width = "150px";
                }
            }
            else if (widthDoc > 600){
                for(let i=0;i<collection.length;i++){
                    collection[i].style.width = "250px";
                }
            }
        }


    </script>
}